name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: ['8.3', '8.4']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: curl, json, mbstring
        coverage: xdebug
    
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-version }}-
    
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
    
    - name: Run unit tests
      run: ./vendor/bin/phpunit --testsuite=Unit --coverage-clover coverage.xml
    
    - name: Upload coverage to Codecov
      if: matrix.php-version == '8.3'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: ['8.3']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: curl, json, mbstring
    
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-version }}-
    
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
    
    - name: Start Weaviate
      run: |
        docker compose -f docker-compose.test.yml up -d
        echo "Waiting for Weaviate to be ready..."
        timeout 120 bash -c 'until curl -f http://localhost:8082/v1/.well-known/ready; do sleep 3; done'
        echo "Weaviate is ready!"
        sleep 5  # Additional wait for full readiness
    
    - name: Run integration tests
      env:
        WEAVIATE_TEST_HOST: localhost
        WEAVIATE_TEST_PORT: 8082
        WEAVIATE_TEST_SCHEME: http
      run: ./vendor/bin/phpunit --testsuite=Integration
    
    - name: Show Weaviate logs on failure
      if: failure()
      run: |
        echo "Integration tests failed. Checking Weaviate logs..."
        docker compose -f docker-compose.test.yml logs weaviate-test
    
    - name: Stop Weaviate
      if: always()
      run: docker compose -f docker-compose.test.yml down -v

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: curl, json, mbstring
    
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ runner.os }}-php-8.3-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-8.3-
    
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
    
    - name: Check code style
      run: composer cs-check
    
    - name: Run static analysis
      run: composer phpstan
    
    - name: Check security issues
      run: composer security-audit
    
    - name: Check composer.json format
      run: composer composer-normalize
